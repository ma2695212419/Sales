<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sales.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.example.sales.model.entity.User">
        <id column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="uname" jdbcType="VARCHAR" property="uname"/>
        <result column="upassword" jdbcType="VARCHAR" property="upassword"/>
        <result column="ugender" jdbcType="INTEGER" property="ugender"/>
        <result column="identity" jdbcType="INTEGER" property="identity"/>
        <result column="ustatus" jdbcType="INTEGER" property="ustatus"/>
        <result column="uphone" jdbcType="INTEGER" property="uphone"/>
    </resultMap>
    <sql id="Base_Column_List">
    `uid`, uname, upassword, ugender, `identity`, ustatus, uphone
  </sql>

    <select id="getAllUser" resultMap="BaseResultMap">
        select  `uid`, uname, upassword, ugender, uphone
        from user
        where ustatus = 1 and identity = 1
    </select>

    <insert id="insertUser" parameterType="com.example.sales.model.entity.User">
        insert into user (uid, uname, ugender, uphone,upassword)
        values (#{uid},#{uname},#{ugender},#{uphone},#{upassword})
    </insert>


    <select id="loginByUserNameAndPassword" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where uname = #{uname} and upassword = #{upassword}
    </select>


    <insert id="insertSelective" keyColumn="uid" keyProperty="uid" parameterType="com.example.sales.model.entity.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uname != null">
                uname,
            </if>
            <if test="upassword != null">
                upassword,
            </if>
            <if test="ugender != null">
                ugender,
            </if>
            <if test="identity != null">
                `identity`,
            </if>
            <if test="ustatus != null">
                ustatus,
            </if>
            <if test="uphone != null">
                uphone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
            <if test="upassword != null">
                #{upassword,jdbcType=VARCHAR},
            </if>
            <if test="ugender != null">
                #{ugender,jdbcType=INTEGER},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=INTEGER},
            </if>
            <if test="ustatus != null">
                #{ustatus,jdbcType=INTEGER},
            </if>
            <if test="uphone != null">
                #{uphone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.example.sales.model.entity.User">
        update user
        <set>
            <if test="uname != null">
                uname = #{uname,jdbcType=VARCHAR},
            </if>
            <if test="upassword != null">
                upassword = #{upassword,jdbcType=VARCHAR},
            </if>
            <if test="ugender != null">
                ugender = #{ugender,jdbcType=INTEGER},
            </if>
            <if test="identity != null">
                `identity` = #{identity,jdbcType=INTEGER},
            </if>
            <if test="ustatus != null">
                ustatus = #{ustatus,jdbcType=INTEGER},
            </if>
            <if test="uphone != null">
                uphone = #{uphone,jdbcType=VARCHAR},
            </if>
        </set>
        where `uid` = #{uid,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.example.sales.model.entity.User">
    update user
    set uname = #{uname,jdbcType=VARCHAR},
      upassword = #{upassword,jdbcType=VARCHAR},
      ugender = #{ugender,jdbcType=INTEGER},
      `identity` = #{identity,jdbcType=INTEGER},
      ustatus = #{ustatus,jdbcType=INTEGER},
      uphone = #{uphone,jdbcType=VARCHAR}
    where `uid` = #{uid,jdbcType=VARCHAR}
  </update>


</mapper>